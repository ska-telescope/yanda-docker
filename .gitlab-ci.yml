#    ICRAR - International Centre for Radio Astronomy Research
#    (c) UWA - The University of Western Australia, 2019
#    Copyright by UWA (in the framework of the ICRAR)
#    All rights reserved
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
#    MA 02111-1307  USA


image: docker:stable

variables:
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using the Kubernetes executor, the variable should be set to
  # tcp://localhost:2375/ because of how the Kubernetes executor connects services
  # to the job container
  # DOCKER_HOST: tcp://localhost:2375/
  #
  # For non-Kubernetes executors, we use tcp://docker:2375/
  DOCKER_HOST: tcp://docker:2375/
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

before_script:
  - docker login -u $DOCKER_REGISTRY_USER_LOGIN -p $CI_REGISTRY_PASS_LOGIN $CI_REGISTRY
  - docker info

stages:
  - build_01
  - build_02
  - build_03
  - test_01
  - test_02

build_docker_yanda_base:
  retry: 2
  stage: build_01
  tags:
    - docker-executor
  script:
    - cd yanda_base
    - docker build -t $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-base .
    - docker push $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-base:latest

build_docker_daliuge:
  retry: 2
  stage: build_02
  tags:
    - docker-executor
  script:
    - cd DALiuGE
    - >
      docker build -t $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-daliuge
      --build-arg DOCKER_REGISTRY_USER=$DOCKER_REGISTRY_USER
      --build-arg DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST
      .
    - docker push $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-daliuge:latest

build_docker_ingest:
  retry: 2
  stage: build_03
  tags:
    - docker-executor
  script:
    - cd ingest
    - >
      docker build -t $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-ingest
      --build-arg DOCKER_REGISTRY_USER=$DOCKER_REGISTRY_USER
      --build-arg DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST
      .
    - docker push $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-ingest:latest

test_docker_daliuge:
  stage: test_01
  script:
    - docker pull $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-daliuge
    - >
      docker run -d --rm --name daliuge-test
      $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-daliuge
      dlg help

test_docker_ingest:
  stage: test_02
  script:
    - docker pull $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-ingest
    - >
      docker run -d --rm --name daliuge-test
      $DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/yanda-ingest
      dlg help
